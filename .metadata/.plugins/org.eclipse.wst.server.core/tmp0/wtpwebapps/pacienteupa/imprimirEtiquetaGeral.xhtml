<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
					  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	  xmlns:ui="http://java.sun.com/jsf/facelets"
	  xmlns:f="http://java.sun.com/jsf/core"
	  xmlns:h="http://java.sun.com/jsf/html"
	  xmlns:a4j="http://richfaces.org/a4j"
	  xmlns:rich="http://richfaces.org/rich">
<head>
    <title>ARS VITAE</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
	<!-- Required scripts -->
	<script type="text/javascript" src="SCRIPTS/zebra/dependencies/rsvp-3.1.0.min.js"></script>
	<script type="text/javascript" src="SCRIPTS/zebra/dependencies/sha-256.min.js"></script>
	<script type="text/javascript" src="SCRIPTS/zebra/qz-tray.js"></script>
	<script type="text/javascript" src="SCRIPTS/custom.js"></script>
	
	
</head>

<body id="qz-page" onload="imprimir()">

	<div id="qz-alert" style="position: fixed; width: 60%; margin: 0 4% 0 36%; z-index: 900;"></div>
	<div id="qz-pin" style="position: fixed; width: 30%; margin: 0 66% 0 4%; z-index: 900;"></div>

	<script type="text/javascript">
	//<![CDATA[
	    /// Authentication setup ///
	    qz.security.setCertificatePromise(function(resolve, reject) {
	
	        //Alternate method 2 - direct
	        resolve("-----BEGIN CERTIFICATE-----\n" +
	                "MIIFAzCCAuugAwIBAgICEAIwDQYJKoZIhvcNAQEFBQAwgZgxCzAJBgNVBAYTAlVT\n" +
	                "MQswCQYDVQQIDAJOWTEbMBkGA1UECgwSUVogSW5kdXN0cmllcywgTExDMRswGQYD\n" +
	                "VQQLDBJRWiBJbmR1c3RyaWVzLCBMTEMxGTAXBgNVBAMMEHF6aW5kdXN0cmllcy5j\n" +
	                "b20xJzAlBgkqhkiG9w0BCQEWGHN1cHBvcnRAcXppbmR1c3RyaWVzLmNvbTAeFw0x\n" +
	                "NTAzMTkwMjM4NDVaFw0yNTAzMTkwMjM4NDVaMHMxCzAJBgNVBAYTAkFBMRMwEQYD\n" +
	                "VQQIDApTb21lIFN0YXRlMQ0wCwYDVQQKDAREZW1vMQ0wCwYDVQQLDAREZW1vMRIw\n" +
	                "EAYDVQQDDAlsb2NhbGhvc3QxHTAbBgkqhkiG9w0BCQEWDnJvb3RAbG9jYWxob3N0\n" +
	                "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtFzbBDRTDHHmlSVQLqjY\n" +
	                "aoGax7ql3XgRGdhZlNEJPZDs5482ty34J4sI2ZK2yC8YkZ/x+WCSveUgDQIVJ8oK\n" +
	                "D4jtAPxqHnfSr9RAbvB1GQoiYLxhfxEp/+zfB9dBKDTRZR2nJm/mMsavY2DnSzLp\n" +
	                "t7PJOjt3BdtISRtGMRsWmRHRfy882msBxsYug22odnT1OdaJQ54bWJT5iJnceBV2\n" +
	                "1oOqWSg5hU1MupZRxxHbzI61EpTLlxXJQ7YNSwwiDzjaxGrufxc4eZnzGQ1A8h1u\n" +
	                "jTaG84S1MWvG7BfcPLW+sya+PkrQWMOCIgXrQnAsUgqQrgxQ8Ocq3G4X9UvBy5VR\n" +
	                "CwIDAQABo3sweTAJBgNVHRMEAjAAMCwGCWCGSAGG+EIBDQQfFh1PcGVuU1NMIEdl\n" +
	                "bmVyYXRlZCBDZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQUpG420UhvfwAFMr+8vf3pJunQ\n" +
	                "gH4wHwYDVR0jBBgwFoAUkKZQt4TUuepf8gWEE3hF6Kl1VFwwDQYJKoZIhvcNAQEF\n" +
	                "BQADggIBAFXr6G1g7yYVHg6uGfh1nK2jhpKBAOA+OtZQLNHYlBgoAuRRNWdE9/v4\n" +
	                "J/3Jeid2DAyihm2j92qsQJXkyxBgdTLG+ncILlRElXvG7IrOh3tq/TttdzLcMjaR\n" +
	                "8w/AkVDLNL0z35shNXih2F9JlbNRGqbVhC7qZl+V1BITfx6mGc4ayke7C9Hm57X0\n" +
	                "ak/NerAC/QXNs/bF17b+zsUt2ja5NVS8dDSC4JAkM1dD64Y26leYbPybB+FgOxFu\n" +
	                "wou9gFxzwbdGLCGboi0lNLjEysHJBi90KjPUETbzMmoilHNJXw7egIo8yS5eq8RH\n" +
	                "i2lS0GsQjYFMvplNVMATDXUPm9MKpCbZ7IlJ5eekhWqvErddcHbzCuUBkDZ7wX/j\n" +
	                "unk/3DyXdTsSGuZk3/fLEsc4/YTujpAjVXiA1LCooQJ7SmNOpUa66TPz9O7Ufkng\n" +
	                "+CoTSACmnlHdP7U9WLr5TYnmL9eoHwtb0hwENe1oFC5zClJoSX/7DRexSJfB7YBf\n" +
	                "vn6JA2xy4C6PqximyCPisErNp85GUcZfo33Np1aywFv9H+a83rSUcV6kpE/jAZio\n" +
	                "5qLpgIOisArj1HTM6goDWzKhLiR/AeG3IJvgbpr9Gr7uZmfFyQzUjvkJ9cybZRd+\n" +
	                "G8azmpBBotmKsbtbAU/I/LVk8saeXznshOVVpDRYtVnjZeAneso7\n" +
	                "-----END CERTIFICATE-----\n" +
	                "--START INTERMEDIATE CERT--\n" +
	                "-----BEGIN CERTIFICATE-----\n" +
	                "MIIFEjCCA/qgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgawxCzAJBgNVBAYTAlVT\n" +
	                "MQswCQYDVQQIDAJOWTESMBAGA1UEBwwJQ2FuYXN0b3RhMRswGQYDVQQKDBJRWiBJ\n" +
	                "bmR1c3RyaWVzLCBMTEMxGzAZBgNVBAsMElFaIEluZHVzdHJpZXMsIExMQzEZMBcG\n" +
	                "A1UEAwwQcXppbmR1c3RyaWVzLmNvbTEnMCUGCSqGSIb3DQEJARYYc3VwcG9ydEBx\n" +
	                "emluZHVzdHJpZXMuY29tMB4XDTE1MDMwMjAwNTAxOFoXDTM1MDMwMjAwNTAxOFow\n" +
	                "gZgxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOWTEbMBkGA1UECgwSUVogSW5kdXN0\n" +
	                "cmllcywgTExDMRswGQYDVQQLDBJRWiBJbmR1c3RyaWVzLCBMTEMxGTAXBgNVBAMM\n" +
	                "EHF6aW5kdXN0cmllcy5jb20xJzAlBgkqhkiG9w0BCQEWGHN1cHBvcnRAcXppbmR1\n" +
	                "c3RyaWVzLmNvbTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBANTDgNLU\n" +
	                "iohl/rQoZ2bTMHVEk1mA020LYhgfWjO0+GsLlbg5SvWVFWkv4ZgffuVRXLHrwz1H\n" +
	                "YpMyo+Zh8ksJF9ssJWCwQGO5ciM6dmoryyB0VZHGY1blewdMuxieXP7Kr6XD3GRM\n" +
	                "GAhEwTxjUzI3ksuRunX4IcnRXKYkg5pjs4nLEhXtIZWDLiXPUsyUAEq1U1qdL1AH\n" +
	                "EtdK/L3zLATnhPB6ZiM+HzNG4aAPynSA38fpeeZ4R0tINMpFThwNgGUsxYKsP9kh\n" +
	                "0gxGl8YHL6ZzC7BC8FXIB/0Wteng0+XLAVto56Pyxt7BdxtNVuVNNXgkCi9tMqVX\n" +
	                "xOk3oIvODDt0UoQUZ/umUuoMuOLekYUpZVk4utCqXXlB4mVfS5/zWB6nVxFX8Io1\n" +
	                "9FOiDLTwZVtBmzmeikzb6o1QLp9F2TAvlf8+DIGDOo0DpPQUtOUyLPCh5hBaDGFE\n" +
	                "ZhE56qPCBiQIc4T2klWX/80C5NZnd/tJNxjyUyk7bjdDzhzT10CGRAsqxAnsjvMD\n" +
	                "2KcMf3oXN4PNgyfpbfq2ipxJ1u777Gpbzyf0xoKwH9FYigmqfRH2N2pEdiYawKrX\n" +
	                "6pyXzGM4cvQ5X1Yxf2x/+xdTLdVaLnZgwrdqwFYmDejGAldXlYDl3jbBHVM1v+uY\n" +
	                "5ItGTjk+3vLrxmvGy5XFVG+8fF/xaVfo5TW5AgMBAAGjUDBOMB0GA1UdDgQWBBSQ\n" +
	                "plC3hNS56l/yBYQTeEXoqXVUXDAfBgNVHSMEGDAWgBQDRcZNwPqOqQvagw9BpW0S\n" +
	                "BkOpXjAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQAJIO8SiNr9jpLQ\n" +
	                "eUsFUmbueoxyI5L+P5eV92ceVOJ2tAlBA13vzF1NWlpSlrMmQcVUE/K4D01qtr0k\n" +
	                "gDs6LUHvj2XXLpyEogitbBgipkQpwCTJVfC9bWYBwEotC7Y8mVjjEV7uXAT71GKT\n" +
	                "x8XlB9maf+BTZGgyoulA5pTYJ++7s/xX9gzSWCa+eXGcjguBtYYXaAjjAqFGRAvu\n" +
	                "pz1yrDWcA6H94HeErJKUXBakS0Jm/V33JDuVXY+aZ8EQi2kV82aZbNdXll/R6iGw\n" +
	                "2ur4rDErnHsiphBgZB71C5FD4cdfSONTsYxmPmyUb5T+KLUouxZ9B0Wh28ucc1Lp\n" +
	                "rbO7BnjW\n" +
	                "-----END CERTIFICATE-----\n");
	    });
	
	    qz.security.setSignaturePromise(function(toSign) {
	        return function(resolve, reject) {
	            //Alternate method - unsigned
	            resolve();
	        };
	    });	
	
	    qz.websocket.setClosedCallbacks(function(evt) {
	        updateState('Inactive', 'default');
	        console.log(evt);
	
	        if (evt.reason) {
	            displayMessage("<strong>Connection closed:</strong> " + evt.reason, 'alert-warning');
	        }
	    });
	
	    qz.websocket.setErrorCallbacks(handleConnectionError);
	
	    var qzVersion = 0;
	    function findVersion() {
	        qz.api.getVersion().then(function(data) {
	            $("#qz-version").html(data);
	            qzVersion = data;
	        }).catch(displayError);
	    }
	
	    /// Helpers ///
	    function handleConnectionError(err) {
	        updateState('Error', 'danger');
	
	        if (err.target != undefined) {
	            if (err.target.readyState >= 2) { //if CLOSING or CLOSED
	                displayError("Connection to QZ Tray was closed");
	            } else {
	                displayError("A connection error occurred, check log for details");
	                console.error(err);
	            }
	        } else {
	            displayError(err);
	        }
	    }
	
	    function displayError(err) {
	        console.error(err);
	        displayMessage(err, 'alert-danger');
	    }
	
	    function displayMessage(msg, css) {
	    }
	
	    function pinMessage(msg, id, css) {
	    }
	
	    function updateState(text, css) {
	    }
	
	    function getPath() {
	        var path = window.location.href;
	        return path.substring(0, path.lastIndexOf("/"));
	    }
	
	
	    /// QZ Config ///
	    var cfg = null;
	    function getUpdatedConfig() {
	        if (cfg == null) {
	            cfg = qz.configs.create(null);
	        }
	
	        //updateConfig();
	        return cfg
	    }
	
	    function updateConfig() {
	    }
	
	    function setPrinter(printer) {
	        var cf = getUpdatedConfig();
	        cf.setPrinter(printer);
	
	        if (typeof printer === 'object' && printer.name == undefined) {
	            var shown;
	            if (printer.file != undefined) {
	                shown = "<em>FILE:</em> " + printer.file;
	            }
	            if (printer.host != undefined) {
	                shown = "<em>HOST:</em> " + printer.host + ":" + printer.port;
	            }
	
	            //$("#configPrinter").html(shown);
	        } else {
	            if (printer.name != undefined) {
	                printer = printer.name;
	            }
	
	            if (printer == undefined) {
	                printer = 'NONE';
	            }
	            //$("#configPrinter").html(printer);
	        }
	    }
	    
	    function getFormatacaoEtiqueta(obj) {
	    	var nome1 = '', nome2 = '', mae = '', codBarrasProntuario = '';
	    	
	    	codBarrasProntuario = preencherComCaracteres(obj.prontuario, 0, 8);
	    	
			if(obj.mae.length > 29) {
				mae = obj.mae.substring(0, 29);
			} else {
				mae = obj.mae;
			}
			
			if(obj.nome.length > 29) {
				nome1 = obj.nome.substring(0, 29);
				if(obj.nome.length > 58) {
					nome2 = obj.nome.substring(29, 58);
				} else {
					nome2 = obj.nome.substring(29);
				}
			} else {
				nome1 = obj.nome;
			}
			
			return [
				'I8,A,001\n',
				'\n',
				'\n',
				'Q168,024\n',
				'q831\n',
				'rN\n',
				'S3\n',
				'D10\n',
				'ZT\n',
				'JF\n',
				'O\n',
				'R160,0\n',
				'f100\n',
				'N\n',
				'A102,10,0,3,1,1,N,"' + nome1 + '"\n',
				'A102,30,0,3,1,1,N,"' + nome2 + '"\n',
				'A102,50,0,3,1,1,N,"PRONTU√ÅRIO:' + obj.prontuario + '"\n',
				'A102,70,0,3,1,1,N,"' + mae + '"\n',
				'A102,90,0,3,1,1,N,"' + obj.nascimento + ' ' + obj.idade + '"\n',
				'B177,111,0,1,2,6,33,N,"' + codBarrasProntuario + '"\n',
				'P1\n'
			];
	    }
	
		function imprimir(config) {
			if (!qz.websocket.isActive()) {
	            qz.websocket.connect(config).then(function() {
	            	qz.printers.getDefault().then(function(data) {
	                    setPrinter(data);
						var config = getUpdatedConfig();
						var etiqueta = {
							    prontuario:"#{geralForm.prontuario}",
							    nome:"#{geralForm.nome}",
							    mae:"#{geralForm.mae}",
							    internacao:"#{geralForm.internacao}",
							    nascimento:"#{geralForm.nascimento}",
							    idade:"#{geralForm.idade}"
							};
						
						var printData = getFormatacaoEtiqueta(etiqueta);
				        qz.print(config, printData).then(function() {
							qz.websocket.disconnect().then(function() {
								fecharJanela();
							}).catch(handleConnectionError);			        	
				        }).catch(displayError);
	                }).catch(displayError);
	            }).catch(handleConnectionError);
	        } else {
	            displayMessage('An active connection with QZ already exists.', 'alert-warning');
	        }
		}
		
		function fecharJanela() {
			ww = window.open(window.location, "_self");
			ww.close();
		}
	
		function aguardar() {		
			setTimeout(function() { return true; }, 30000);
			imprimir();
			alert('Etiqueta enviada para a impressora!');
			fecharJanela();
		}
		
	//]]>	
	</script>
</body>

</html>
